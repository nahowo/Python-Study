import heapq

def solution(scoville, K):
    answer = 0
    scoville.sort()

    while scoville[0]<K:
        if len(scoville)<=1:
            answer=-1
            break
        else:
            s1=heapq.heappop(scoville)
            s2=heapq.heappop(scoville)
            heapq.heappush(scoville,s1+(s2*2))
            answer+=1
            
    return answer
   

정확성  테스트
테스트 1 〉	통과 (0.01ms, 10.2MB)
테스트 2 〉	통과 (0.01ms, 10.2MB)
테스트 3 〉	통과 (0.01ms, 10.3MB)
테스트 4 〉	통과 (0.01ms, 10.2MB)
테스트 5 〉	통과 (0.01ms, 10.2MB)
테스트 6 〉	통과 (0.47ms, 10.2MB)
테스트 7 〉	통과 (0.40ms, 10.2MB)
테스트 8 〉	통과 (0.09ms, 10.2MB)
테스트 9 〉	통과 (0.09ms, 10.2MB)
테스트 10 〉	통과 (0.31ms, 10.3MB)
테스트 11 〉	통과 (0.23ms, 10.2MB)
테스트 12 〉	통과 (0.80ms, 10.3MB)
테스트 13 〉	통과 (0.41ms, 10.2MB)
테스트 14 〉	통과 (0.02ms, 10.2MB)
테스트 15 〉	통과 (0.54ms, 10.2MB)
테스트 16 〉	통과 (0.00ms, 10.2MB)
효율성  테스트
테스트 1 〉	통과 (168.21ms, 16.2MB)
테스트 2 〉	통과 (394.56ms, 21.9MB)
테스트 3 〉	통과 (1755.35ms, 49.8MB)
테스트 4 〉	통과 (134.91ms, 15MB)
테스트 5 〉	통과 (1806.23ms, 51.8MB)
채점 결과
정확성: 76.2
효율성: 23.8
